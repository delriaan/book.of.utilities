) |>
purrr::compact() %>%
rlang::set_names(rep.int("", length(.)))
# lapply(htmltools::tags$li) |>
# htmltools::tags$ul()
}) |>
# htmltools::tagList() |>
list2html(.ordered = FALSE, .level = 10) |>
htmltools::html_print()
dir("pkg/R", pattern = "^[a-z].+R$") %>%
rlang::set_names(
stringi::stri_split_fixed(., "_") |>
sapply(\(i) stringi::stri_trans_totitle(i) |> paste(collapse = " ")) |>
stringi::stri_replace_last_fixed(".r", "") |>
sprintf(fmt = "Chapter %2$s - %1$s", seq_along(.))
) |>
purrr::map(\(i){
readLines(paste0("pkg/R/", i)) |>
stringi::stri_extract_all_regex(pattern = "(^[[:punct:]a-z_`%].+ (?=(<-)))", omit_no_match = TRUE) |>
sapply(\(k){
stringi::stri_split_fixed(k, "@family ", simplify = TRUE, omit_empty = TRUE) |> as.vector()
}) |>
purrr::compact() |>
unlist() |>
trimws() %>%
slider::slide(
.after = 2
, .step = 3
, .f = c
, .complete = length(.) > 2
) |>
purrr::compact() %>%
rlang::set_names(rep.int("", length(.)))
# lapply(htmltools::tags$li) |>
# htmltools::tags$ul()
}) |>
# htmltools::tagList() |>
list2html(.ordered = FALSE) |>
htmltools::html_print()
dir("pkg/R", pattern = "^[a-z].+R$") %>%
rlang::set_names(
stringi::stri_split_fixed(., "_") |>
sapply(\(i) stringi::stri_trans_totitle(i) |> paste(collapse = " ")) |>
stringi::stri_replace_last_fixed(".r", "") |>
sprintf(fmt = "Chapter %2$s - %1$s", seq_along(.))
) |>
purrr::map(\(i){
readLines(paste0("pkg/R/", i)) |>
stringi::stri_extract_all_regex(pattern = "(^[[:punct:]a-z_`%].+ (?=(<-)))", omit_no_match = TRUE) |>
sapply(\(k){
stringi::stri_split_fixed(k, "@family ", simplify = TRUE, omit_empty = TRUE) |> as.vector()
}) |>
purrr::compact() |>
unlist() |>
trimws() |>
sort() %>%
slider::slide(
.after = 2
, .step = 3
, .f = c
, .complete = length(.) > 2
) |>
purrr::compact() %>%
rlang::set_names(rep.int("", length(.)))
}) |>
list2html(.ordered = FALSE) |>
htmltools::html_print()
dir("pkg/R", pattern = "^[a-z].+R$") %>%
rlang::set_names(
stringi::stri_split_fixed(., "_") |>
sapply(\(i) stringi::stri_trans_totitle(i) |> paste(collapse = " ")) |>
stringi::stri_replace_last_fixed(".r", "") |>
sprintf(fmt = "Chapter %2$s - %1$s", seq_along(.))
) |>
purrr::map(\(i){
readLines(paste0("pkg/R/", i)) |>
stringi::stri_extract_all_regex(pattern = "(^[[:punct:]a-z_`%].+ (?=(<-)))", omit_no_match = TRUE) |>
sapply(\(k){
stringi::stri_split_fixed(k, "@family ", simplify = TRUE, omit_empty = TRUE) |> as.vector()
}) |>
purrr::compact() |>
unlist() |>
trimws() |>
sort() %>%
slider::slide(
.after = 2
, .step = 3
, .f = c
, .complete = length(.) > 2
) |>
purrr::compact() %>%
rlang::set_names(rep.int("", length(.)))
}) |>
list2html(.ordered = FALSE) |>
htmltools::html_print()
dir("pkg/R", pattern = "^[a-z].+R$") %>%
rlang::set_names(
stringi::stri_split_fixed(., "_") |>
sapply(\(i) stringi::stri_trans_totitle(i) |> paste(collapse = " ")) |>
stringi::stri_replace_last_fixed(".r", "") |>
sprintf(fmt = "Chapter %2$s - %1$s", seq_along(.))
) |>
purrr::map(\(i){
readLines(paste0("pkg/R/", i)) |>
stringi::stri_extract_all_regex(pattern = "(^[[:punct:]a-z_`%].+ (?=(<-)))", omit_no_match = TRUE) |>
sapply(\(k){
stringi::stri_split_fixed(k, "@family ", simplify = TRUE, omit_empty = TRUE) |> as.vector()
}) |>
purrr::compact() |>
unlist() |>
trimws() |>
sort() %>%
slider::slide(
.after = 2
, .step = 3
, .f = c
, .complete = length(.) > 2
) |>
purrr::compact() %>%
rlang::set_names(rep.int("", length(.)))
}) |>
list2html(.ordered = FALSE) |>
htmltools::html_print()
dir("pkg/R", pattern = "^[a-z].+R$") %>%
rlang::set_names(
stringi::stri_split_fixed(., "_") |>
sapply(\(i) stringi::stri_trans_totitle(i) |> paste(collapse = " ")) |>
stringi::stri_replace_last_fixed(".r", "") |>
sprintf(fmt = "Chapter %2$s - %1$s", seq_along(.))
) |>
purrr::map(\(i){
readLines(paste0("pkg/R/", i)) |>
stringi::stri_extract_all_regex(pattern = "(^[[:punct:]a-z_`%].+ (?=(<-)))", omit_no_match = TRUE) |>
sapply(\(k){
stringi::stri_split_fixed(k, "@family ", simplify = TRUE, omit_empty = TRUE) |> as.vector()
}) |>
purrr::compact() |>
unlist() |>
trimws() |>
sort() %>%
slider::slide(
.after = 2
, .step = 3
, .f = c
, .complete = length(.) > 2
) |>
purrr::compact() %>%
rlang::set_names(rep.int("", length(.)))
}) |>
list2html(.ordered = FALSE) |>
htmltools::html_print()
dir("pkg/R", pattern = "^[a-z].+R$") %>%
rlang::set_names(
stringi::stri_split_fixed(., "_") |>
sapply(\(i) stringi::stri_trans_totitle(i) |> paste(collapse = " ")) |>
stringi::stri_replace_last_fixed(".r", "") |>
sprintf(fmt = "Chapter %2$s - %1$s", seq_along(.))
) |>
purrr::map(\(i){
readLines(paste0("pkg/R/", i)) |>
stringi::stri_extract_all_regex(pattern = "(^[[:punct:]a-z_`%].+ (?=(<-)))", omit_no_match = TRUE) |>
sapply(\(k){
stringi::stri_split_fixed(k, "@family ", simplify = TRUE, omit_empty = TRUE) |> as.vector()
}) |>
purrr::compact() |>
unlist() |>
trimws() |>
sort() %>%
slider::slide(
.after = 2
, .step = 3
, .f = c
, .complete = length(.) > 2
) |>
purrr::compact() %>%
rlang::set_names(rep.int("", length(.)))
}) |>
list2html(.ordered = FALSE)
htmltools::html_print(viewer = NULL) |>
file.copy(to = getwd())
dir("pkg/R", pattern = "^[a-z].+R$") %>%
rlang::set_names(
stringi::stri_split_fixed(., "_") |>
sapply(\(i) stringi::stri_trans_totitle(i) |> paste(collapse = " ")) |>
stringi::stri_replace_last_fixed(".r", "") |>
sprintf(fmt = "Chapter %2$s - %1$s", seq_along(.))
) |>
purrr::map(\(i){
readLines(paste0("pkg/R/", i)) |>
stringi::stri_extract_all_regex(pattern = "(^[[:punct:]a-z_`%].+ (?=(<-)))", omit_no_match = TRUE) |>
sapply(\(k){
stringi::stri_split_fixed(k, "@family ", simplify = TRUE, omit_empty = TRUE) |> as.vector()
}) |>
purrr::compact() |>
unlist() |>
trimws() |>
sort() %>%
slider::slide(
.after = 2
, .step = 3
, .f = c
, .complete = length(.) > 2
) |>
purrr::compact() %>%
rlang::set_names(rep.int("", length(.)))
}) |>
list2html(.ordered = FALSE) |>
htmltools::html_print(viewer = NULL) |>
file.copy(to = getwd())
getwd()
dir("pkg/R", pattern = "^[a-z].+R$") %>%
rlang::set_names(
stringi::stri_split_fixed(., "_") |>
sapply(\(i) stringi::stri_trans_totitle(i) |> paste(collapse = " ")) |>
stringi::stri_replace_last_fixed(".r", "") |>
sprintf(fmt = "Chapter %2$s - %1$s", seq_along(.))
) |>
purrr::map(\(i){
readLines(paste0("pkg/R/", i)) |>
stringi::stri_extract_all_regex(pattern = "(^[[:punct:]a-z_`%].+ (?=(<-)))", omit_no_match = TRUE) |>
sapply(\(k){
stringi::stri_split_fixed(k, "@family ", simplify = TRUE, omit_empty = TRUE) |> as.vector()
}) |>
purrr::compact() |>
unlist() |>
trimws() |>
sort() %>%
slider::slide(
.after = 2
, .step = 3
, .f = c
, .complete = length(.) > 2
) |>
purrr::compact() %>%
rlang::set_names(rep.int("", length(.)))
}) |>
list2html(.ordered = FALSE) |>
htmltools::html_print(viewer = NULL) |>
file.copy(to = paste0("pkg/toc.html"))
readLines("toc.html") |> paste(collapse = "\n")
getwd()
readLines("pkg/toc.html") |> paste(collapse = "\n")
readLines("pkg/toc.html") |> paste(collapse = "\n") |> htmltools::HTML()
readLines("pkg/toc.html") |> paste(collapse = "\n") |> htmltools::tagList()
library(book.of.utilities)
pkgdown::build_site(pkg = "pkg", lazy = TRUE, override = list(destination = "../docs"))
dir("pkg/R", pattern = "^[a-z].+R$") %>%
rlang::set_names(
stringi::stri_split_fixed(., "_") |>
sapply(\(i) stringi::stri_trans_totitle(i) |> paste(collapse = " ")) |>
stringi::stri_replace_last_fixed(".r", "") |>
sprintf(fmt = "Chapter %2$s - %1$s", seq_along(.))
) |>
purrr::map(\(i){
readLines(paste0("pkg/R/", i)) |>
stringi::stri_extract_all_regex(pattern = "(^[[:punct:]a-z_`%].+ (?=(<-)))", omit_no_match = TRUE) |>
sapply(\(k){
stringi::stri_split_fixed(k, "@family ", simplify = TRUE, omit_empty = TRUE) |> as.vector()
}) |>
purrr::compact() |>
unlist() |>
trimws() |>
sort() %>%
slider::slide(
.after = 2
, .step = 3
, .f = c
, .complete = length(.) > 2
) |>
purrr::compact() %>%
rlang::set_names(rep.int("", length(.)))
}) |>
list2html(.ordered = FALSE) |>
htmltools::html_print(viewer = NULL)
#
# Build Site ----
# usethis::use_pkgdown()
dir("../resources/R", pattern = "list", full.names = TRUE) |> source();
dir("pkg/R", pattern = "^[a-z].+R$") %>%
rlang::set_names(
stringi::stri_split_fixed(., "_") |>
sapply(\(i) stringi::stri_trans_totitle(i) |> paste(collapse = " ")) |>
stringi::stri_replace_last_fixed(".r", "") |>
sprintf(fmt = "Chapter %2$s - %1$s", seq_along(.))
) |>
purrr::map(\(i){
readLines(paste0("pkg/R/", i)) |>
stringi::stri_extract_all_regex(pattern = "(^[[:punct:]a-z_`%].+ (?=(<-)))", omit_no_match = TRUE) |>
sapply(\(k){
stringi::stri_split_fixed(k, "@family ", simplify = TRUE, omit_empty = TRUE) |> as.vector()
}) |>
purrr::compact() |>
unlist() |>
trimws() |>
sort() %>%
slider::slide(
.after = 2
, .step = 3
, .f = c
, .complete = length(.) > 2
) |>
purrr::compact() %>%
rlang::set_names(rep.int("", length(.)))
}) |>
list2html(.ordered = FALSE)
dir("pkg/R", pattern = "^[a-z].+R$") %>%
rlang::set_names(
stringi::stri_split_fixed(., "_") |>
sapply(\(i) stringi::stri_trans_totitle(i) |> paste(collapse = " ")) |>
stringi::stri_replace_last_fixed(".r", "") |>
sprintf(fmt = "Chapter %2$s - %1$s", seq_along(.))
) |>
purrr::map(\(i){
readLines(paste0("pkg/R/", i)) |>
stringi::stri_extract_all_regex(pattern = "(^[[:punct:]a-z_`%].+ (?=(<-)))", omit_no_match = TRUE) |>
sapply(\(k){
stringi::stri_split_fixed(k, "@family ", simplify = TRUE, omit_empty = TRUE) |> as.vector()
}) |>
purrr::compact() |>
unlist() |>
trimws() |>
sort() %>%
slider::slide(
.after = 2
, .step = 3
, .f = c
, .complete = length(.) > 2
) |>
purrr::compact() %>%
rlang::set_names(rep.int("", length(.)))
}) |>
list2html(.ordered = FALSE) |>
cat(file = "pkg/toc.html", sep = "\n")
dir("pkg/R", pattern = "^[a-z].+R$") %>%
rlang::set_names(
stringi::stri_split_fixed(., "_") |>
sapply(\(i) stringi::stri_trans_totitle(i) |> paste(collapse = " ")) |>
stringi::stri_replace_last_fixed(".r", "") |>
sprintf(fmt = "Chapter %2$s - %1$s", seq_along(.))
) |>
purrr::map(\(i){
readLines(paste0("pkg/R/", i)) |>
stringi::stri_extract_all_regex(pattern = "(^[[:punct:]a-z_`%].+ (?=(<-)))", omit_no_match = TRUE) |>
sapply(\(k){
stringi::stri_split_fixed(k, "@family ", simplify = TRUE, omit_empty = TRUE) |> as.vector()
}) |>
purrr::compact() |>
unlist() |>
trimws() |>
sort() %>%
slider::slide(
.after = 2
, .step = 3
, .f = c
, .complete = length(.) > 2
) |>
purrr::compact() %>%
rlang::set_names(rep.int("", length(.)))
}) |>
list2html(.ordered = FALSE) |>
as.character() |>
cat(file = "pkg/toc.html", sep = "\n")
pkgdown::build_site(pkg = "pkg", lazy = TRUE, override = list(destination = "../docs"))
rmarkdown::render("README.rmd", knit_root_dir = getwd(), intermediates_dir = getwd());
rmarkdown::render("pkg/README.rmd", knit_root_dir = getwd(), intermediates_dir = getwd());
pkgdown::build_site(pkg = "pkg", lazy = TRUE, override = list(destination = "../docs"))
dir("pkg/R", pattern = "^[a-z].+R$") %>%
rlang::set_names(
stringi::stri_split_fixed(., "_") |>
sapply(\(i) stringi::stri_trans_totitle(i) |> paste(collapse = " ")) |>
stringi::stri_replace_all_fixed(c(".r", "z_"), "") |>
sprintf(fmt = "Chapter %2$s - %1$s", seq_along(.))
)
dir("pkg/R", pattern = "^[a-z].+R$") %>%
rlang::set_names(
stringi::stri_split_fixed(., "_") |>
sapply(\(i) stringi::stri_trans_totitle(i) |> paste(collapse = " ")) |>
stringi::stri_replace_all_fixed(c(".r", "z_"), "", vectorize_all = FALSE) |>
sprintf(fmt = "Chapter %2$s - %1$s", seq_along(.))
)
dir("pkg/R", pattern = "^[a-z].+R$") %>%
rlang::set_names(
stringi::stri_split_fixed(., "_") |>
sapply(\(i) stringi::stri_trans_totitle(i) |> paste(collapse = " ")) |>
stringi::stri_replace_all_fixed(c(".r", "Z "), "", vectorize_all = FALSE) |>
sprintf(fmt = "Chapter %2$s - %1$s", seq_along(.))
)
dir("pkg/R", pattern = "^[a-z].+R$") %>%
rlang::set_names(
stringi::stri_split_fixed(., "_") |>
sapply(\(i) stringi::stri_trans_totitle(i) |> paste(collapse = " ")) |>
stringi::stri_replace_all_fixed(c(".r", "Z "), "", vectorize_all = FALSE) |>
sprintf(fmt = "Chapter %2$s - %1$s", seq_along(.))
) |>
purrr::map(\(i){
readLines(paste0("pkg/R/", i)) |>
stringi::stri_extract_all_regex(pattern = "(^[[:punct:]a-z_`%].+ (?=(<-)))", omit_no_match = TRUE) |>
sapply(\(k){
stringi::stri_split_fixed(k, "@family ", simplify = TRUE, omit_empty = TRUE) |> as.vector()
}) |>
purrr::compact() |>
unlist() |>
trimws() |>
sort() %>%
slider::slide(
.after = 2
, .step = 3
, .f = c
, .complete = length(.) > 2
) |>
purrr::compact() %>%
rlang::set_names(rep.int("", length(.)))
}) |>
list2html(.ordered = FALSE) |>
as.character() |>
cat(file = "pkg/toc.html", sep = "\n")
rmarkdown::render("pkg/README.rmd", knit_root_dir = getwd(), intermediates_dir = getwd());
pkgdown::build_site(pkg = "pkg", lazy = TRUE, override = list(destination = "../docs"))
htmltools::htmlEscape(c("1", "<"))
htmltools::htmlEscape(c("1", "<")) |> htmltools::html_print()
htmltools::htmlEscape(c("1", "<")) |> paste(collapse = ", ") |> htmltools::html_print()
c("1", "<") |> paste(collapse = ", ") |> htmltools::html_print()
dir("pkg/R", pattern = "^[a-z].+R$") %>%
rlang::set_names(
stringi::stri_split_fixed(., "_") |>
sapply(\(i) stringi::stri_trans_totitle(i) |> paste(collapse = " ")) |>
stringi::stri_replace_all_fixed(c(".r", "Z "), "", vectorize_all = FALSE) |>
sprintf(fmt = "Chapter %2$s - %1$s", seq_along(.))
) |>
purrr::map(\(i){
readLines(paste0("pkg/R/", i)) |>
stringi::stri_extract_all_regex(pattern = "(^[[:punct:]a-z_`%].+ (?=(<-)))", omit_no_match = TRUE) |>
sapply(\(k){
stringi::stri_split_fixed(k, "@family ", simplify = TRUE, omit_empty = TRUE) |> as.vector()
}) |>
purrr::compact() |>
unlist() |>
trimws() |>
sort() %>%
slider::slide(
.after = 2
, .step = 3
, .f = \(k) sapply(k, \(i) htmltools::HTML(i) |> as.character())
, .complete = length(.) > 2
) |>
purrr::compact() %>%
rlang::set_names(rep.int("", length(.)))
}) |>
list2html(.ordered = FALSE) |>
as.character() |>
cat(file = "pkg/toc.html", sep = "\n")
rmarkdown::render("pkg/README.rmd", knit_root_dir = getwd(), intermediates_dir = getwd());
pkgdown::build_site(pkg = "pkg", lazy = TRUE, override = list(destination = "../docs"))
rmarkdown::render("pkg/README.rmd", knit_root_dir = getwd(), intermediates_dir = getwd());
# Manually replace `%&gt;&lt;%` with `%<>%`
rstudioapi::navigateToFile("pkg/README.md");
pkgdown::build_site(pkg = "pkg", lazy = TRUE, override = list(destination = "../docs"))
library(book.of.utilities)
git2r::branches()
git2r::commits()
git2r::commits(ref = "June2023")
git2r::commits()
git2r::commits(ref = "June2023") |> length()
git2r::commits() |> length()
git_repo <- git2r::get_repository()
git_repo <- git2r::repository(getwd())
git_repo |> plot()
git2r::commits() |> stringi::stri_extract_all_regex("[#].+")
git2r::commits() |> stringi::stri_extract_all_regex("[#].+", omit_no_match = TRUE)
git2r::commits() |>
as.vector() |>
stringi::stri_extract_all_regex("[#].+", omit_no_match = TRUE)
git2r::commits() |>
unlist() |>
stringi::stri_extract_all_regex("[#].+", omit_no_match = TRUE)
git2r::commits()
git2r::commits() |>
unlist()
git2r::commits()
git2r::commits() |>
unlist() |>
stringi::stri_extract_all_regex("[#].+", omit_no_match = TRUE)
git2r::commits() |>
unlist() |>
stringi::stri_extract_all_regex("[#].+", omit_no_match = TRUE, simplify = TRUE) |>
as.vector()
git2r::commits() |>
unlist() |>
stringi::stri_extract_all_regex("[#].+", omit_no_match = TRUE, simplify = TRUE) |>
as.vector() |>
unique()
git2r::commits() |>
unlist() |>
stringi::stri_extract_all_regex("[#].+", omit_no_match = TRUE, simplify = TRUE) |>
as.vector() |>
unique() |>
purrr::discard(~.x == "")
git2r::commits() |>
unlist() |>
stringi::stri_extract_all_regex("[#].+", omit_no_match = TRUE, simplify = TRUE) |>
as.vector() |>
unique() |>
purrr::discard(~.x == "") |>
sort()
git2r::commits() |>
unlist() |>
stringi::stri_extract_all_regex("[#].+", omit_no_match = TRUE, simplify = TRUE) |>
as.vector() |>
unique() |>
purrr::discard(~.x == "") |>
sort()
git2r::last_commit()
