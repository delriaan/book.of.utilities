[{"path":"https://github.com/delriaan/book.of.utilities/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chionesu George. Maintainer.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"George C (2025). book..utilities: Book Utilities: utilities working data. R package version 0.2.13, https://github.com/delriaan/book..utilities.","code":"@Manual{,   title = {book.of.utilities: Book of Utilities: utilities for working with data},   author = {Chionesu George},   year = {2025},   note = {R package version 0.2.13},   url = {https://github.com/delriaan/book.of.utilities}, }"},{"path":"https://github.com/delriaan/book.of.utilities/index.html","id":"book-book-of-utilities","dir":"","previous_headings":"","what":"Book of Utilities: utilities for working with data","title":"Book of Utilities: utilities for working with data","text":"book..utilities seeks facilitate execution repetitive, ad-hoc tasks often encountered data processing.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Book of Utilities: utilities for working with data","text":"Use remotes::install_github(\"delriaan/book..utilities\", subdir = \"pkg\") install latest version GitHub.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/index.html","id":"functions","dir":"","previous_headings":"","what":"Functions","title":"Book of Utilities: utilities for working with data","text":"following functional families covered book..utilities: gen_pass(), keyring_export(), keyring_import() calc.geo_mean(), calc.harmonic_mean(), calc.means() calc.rms(), calc.zero_mean(), odds2probs() radix(), range_diff(), ranking.algorithm() count.cycles(), factor.int() %?%(), %??%(), %><%() %bin%(), %if_na_empty%(), %tf%() call.recursion(), checksum(), gen.primes() log_note(), polyname2orig(), vlogical() distinct.list(), enlist(), get.object_sizes()","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/book.of.utilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Book of Utilities: utilities for working with data — book.of.utilities","title":"Book of Utilities: utilities for working with data — book.of.utilities","text":"book..utilities seeks facilitate execution repetitive, ad-hoc tasks often encountered data processing.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/calc.geo_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Geometric Mean — calc.geo_mean","title":"Calculate the Geometric Mean — calc.geo_mean","text":"alias calls calc.means(, \"gm\")","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/calc.geo_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Geometric Mean — calc.geo_mean","text":"","code":"calc.geo_mean(a, post.op = eval)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/calc.geo_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Geometric Mean — calc.geo_mean","text":"(vector) vector numeric values post.op See calc.means","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/calc.harmonic_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Harmonic Mean — calc.harmonic_mean","title":"Calculate the Harmonic Mean — calc.harmonic_mean","text":"alias calls calc.means(, \"hm\")","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/calc.harmonic_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Harmonic Mean — calc.harmonic_mean","text":"","code":"calc.harmonic_mean(a, post.op = eval)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/calc.harmonic_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Harmonic Mean — calc.harmonic_mean","text":"(vector) vector numeric values post.op See calc.means","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/calc.means.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Means — calc.means","title":"Calculate Means — calc.means","text":"calc.means calculates various types central-tendency measures vector passed argument ","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/calc.means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Means — calc.means","text":"","code":"calc.means(   data,   mean.type = \"am\",   post.op = eval,   as.zscore = FALSE,   use.population = FALSE,   ... )"},{"path":"https://github.com/delriaan/book.of.utilities/reference/calc.means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Means — calc.means","text":"data (numeric): numeric vector mean.type (string): character vector types mean value operations execute (see \"Details\") post.op (call | eval): function process output returning .zscore (logical | FALSE) output transformed Z-scores? use.population (logical | FALSE) population standard deviation used (ignored .zscore==FALSE)? ... Additional arguments passed functions","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/calc.means.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Means — calc.means","text":"Arguments data, mean.type, post.op determine return type.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/calc.means.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Means — calc.means","text":"mean.type contains multiple values, list object returned containing one member output; otherwise, single value returned class dependent value mean.type. Valid mean.type values follows: \"\" (Arithmetic-Mean https://en.wikipedia.org/wiki/Arithmetic_mean): Return sum vector values divided magnitude vector \"zm\" (Zero-Mean): Return vector mean vector subtracted values \"gm\" (Geometric Mean https://en.wikipedia.org/wiki/Geometric_mean): Return n-th root product n-element input vector.  Negative input values allowed, resulting complex result \"hm\" (Harmonic Mean https://en.wikipedia.org/wiki/Harmonic_mean): Return reciprocal arithmetic mean reciprocal elements input vector \"rms\"(Root Mean Squared https://en.wikipedia.org/wiki/Root_mean_square): Return square-root arithmetic mean squares elements input vector","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/calc.rms.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Root-Mean-Square — calc.rms","title":"Calculate the Root-Mean-Square — calc.rms","text":"alias calls calc.means(, \"rms\")","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/calc.rms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Root-Mean-Square — calc.rms","text":"","code":"calc.rms(a, post.op = eval)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/calc.rms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Root-Mean-Square — calc.rms","text":"(vector) vector numeric values post.op See calc.means","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/calc.zero_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Zero-Mean — calc.zero_mean","title":"Calculate the Zero-Mean — calc.zero_mean","text":"calc.zero_mean subtracts mean input","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/calc.zero_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Zero-Mean — calc.zero_mean","text":"","code":"calc.zero_mean(a, post.op = eval, as.zscore = FALSE, use.population = FALSE)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/calc.zero_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Zero-Mean — calc.zero_mean","text":"(vector) vector numeric values post.op See calc.means .zscore (logical | FALSE) output transformed Z-scores? use.population (logical,numeric| FALSE) population standard deviation used (ignored .zscore==FALSE): defaults sampling distribution standard deviation. Providing numeric value assumes use.population=TRUE value provided used standard deviation.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/calc.zero_mean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Zero-Mean — calc.zero_mean","text":"alias calls calc.means(, \"hm\")","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/call.recursion.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a Function as Recursively — call.recursion","title":"Execute a Function as Recursively — call.recursion","text":"call.recursion Executes recursive calls fun based output test max.iter times","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/call.recursion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a Function as Recursively — call.recursion","text":"","code":"call.recursion(   x,   fun,   test,   ...,   nxt = I,   max.iter = 1,   cur.iter = 0,   simplify = TRUE )"},{"path":"https://github.com/delriaan/book.of.utilities/reference/call.recursion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a Function as Recursively — call.recursion","text":"x input object fun function operates x produces output test single-argument function returning single Boolean: FALSE stops iteration ... Additional arguments passed fun nxt function operates current output fun(x) send next iterative call fun() max.iter (integer) maximum number iterations cur.iter (integer) current iteration index simplify (logical) last value returned (TRUE) intermediate values well (FALSE)?","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/checksum.html","id":null,"dir":"Reference","previous_headings":"","what":"Checksum Validation — checksum","title":"Checksum Validation — checksum","text":"checksum provides wrapper digest providing hash use comparison","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/checksum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checksum Validation — checksum","text":"","code":"checksum(object, hash, ...)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/checksum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checksum Validation — checksum","text":"object, ... See digest hash (string) hash compare","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/checksum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checksum Validation — checksum","text":"logical scalar","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/count.cycles.html","id":null,"dir":"Reference","previous_headings":"","what":"Cycle Counter — count.cycles","title":"Cycle Counter — count.cycles","text":"count.cycles detects maps conditional occurrence frequency","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/count.cycles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cycle Counter — count.cycles","text":"","code":"count.cycles(cond, offset = 1, reset)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/count.cycles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cycle Counter — count.cycles","text":"cond (logical[]) logical vector offset (integer|1) integer defining series origin reset (logical[]) logical vector length cond TRUE, cycle counter resets offset. Un-evaluated expressions also accepted refer cond definition.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/count.cycles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cycle Counter — count.cycles","text":"one-based (default), conditionally-incremented series","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/count.cycles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cycle Counter — count.cycles","text":"","code":"sample(c(TRUE, FALSE), 50, TRUE) |> print() %>% count.cycles(reset = cumsum(.) %% 5 == 0)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/distinct.list.html","id":null,"dir":"Reference","previous_headings":"","what":"Unique List Selection — distinct.list","title":"Unique List Selection — distinct.list","text":"Return distinct set first-level list elements based respective base64-encoded signatures.  inefficient implementation used nested lists","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/distinct.list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unique List Selection — distinct.list","text":"","code":"distinct.list(i, logical.only = FALSE)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/distinct.list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unique List Selection — distinct.list","text":"(object) input list object (coercible) logical.(logical) TRUE, logical vector returned","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/distinct.list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unique List Selection — distinct.list","text":"list unique, first-level child elements","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/enlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Named List — enlist","title":"Create a Named List — enlist","text":"enlist creates list atomic vector.  names length input provided ..., list members named accordingly produced.  Otherwise, members named values (eg. list(=\"\", =\"\") ): default behavior.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/enlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Named List — enlist","text":"","code":"enlist(x, ...)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/enlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Named List — enlist","text":"x vector values ... (dots_list):: Names use list members: must length x.  Can vector atomic listing.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/enlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Named List — enlist","text":"list, names values x","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/enlist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Named List — enlist","text":"","code":"# :: Test Objects test_x = list(   test_1 = c(1:5)   , test_2 = list(c(1:5), 3, 4, c(letters[1:5])) ); nms = c(\"up\", \"down\", \"left\", \"right\", \"center\");  # :: Unnamed Vector -> Elements become names enlist(test_x$test_1); enlist(test_x$test_2);  # :: Unnamed Vector & Provided Names (Full) -> All elements have names in 'nms' enlist(test_x$test_1, nms); enlist(test_x$test_2, !!!nms); enlist(test_x$test_2, up, down, left, right, center);  # %>% Unnamed Vector & Provided Names (Partial) -> First two names are 'nms[1:2]' with the balance as default enlist(test_x$test_1, !!!nms[1:2]); enlist(test_x$test_2, !!!nms[1:2])"},{"path":"https://github.com/delriaan/book.of.utilities/reference/factor.int.html","id":null,"dir":"Reference","previous_headings":"","what":"Factorization of Integers — factor.int","title":"Factorization of Integers — factor.int","text":"Factorization Integers","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/factor.int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factorization of Integers — factor.int","text":"","code":"factor.int(i, ...)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/factor.int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factorization of Integers — factor.int","text":"(integer[]) One integers factor ... dots_list: Additional integers factor (can used conjunction )","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/factor.int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factorization of Integers — factor.int","text":"factors input given vector list vectors","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/factor.int.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factorization of Integers — factor.int","text":"","code":"factor.int(100, 90)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/gen.primes.html","id":null,"dir":"Reference","previous_headings":"","what":"Prime Number Generator — gen.primes","title":"Prime Number Generator — gen.primes","text":"get.primes generates n prime numbers..","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/gen.primes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prime Number Generator — gen.primes","text":"","code":"gen.primes(   n = 1,   domain = 2:n,   random = FALSE,   distinct = TRUE,   chatty = FALSE )"},{"path":"https://github.com/delriaan/book.of.utilities/reference/gen.primes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prime Number Generator — gen.primes","text":"n (integer) number prime numbers generate domain (integer[]) range prime numbers fall given length two (2) integer vector random (logical) TRUE, internally-generated vector subsetted via sampling distinct (logical) TRUE, unique (sorted) values returned chatty (logical) TRUE, various output printed console, mainly debugging purposes","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/gen.primes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prime Number Generator — gen.primes","text":"vector prime numbers","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/gen_pass.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Password — gen_pass","title":"Generate a Password — gen_pass","text":"gen_pass creates password consisting symbols alphanumeric values.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/gen_pass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Password — gen_pass","text":"","code":"gen_pass(exclude = \"\", out_len = 0L, raw = FALSE, chatty = FALSE)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/gen_pass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Password — gen_pass","text":"exclude Character-coercibles exclude output out_len (integer) length password character format raw (logical) output returned raw? chatty (logical) diagnostic information provided?","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/gen_pass.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Generate a Password — gen_pass","text":"generated string always begins letter returned -raw vector","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/get.object_sizes.html","id":null,"dir":"Reference","previous_headings":"","what":"Recursive Object Size Retrieval — get.object_sizes","title":"Recursive Object Size Retrieval — get.object_sizes","text":"get.object_sizes recursively steps child environments, retrieving object sizes along way","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/get.object_sizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursive Object Size Retrieval — get.object_sizes","text":"","code":"get.object_sizes(   i = rlang::caller_env(),   nm = as.character(substitute(i)),   depth = 0L,   max.depth = 2L,   chatty = FALSE,   ... )"},{"path":"https://github.com/delriaan/book.of.utilities/reference/get.object_sizes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursive Object Size Retrieval — get.object_sizes","text":"(object) top-level object nm (string) object name current iteration depth (integer) current iteration depth max.depth (integer) maximum recursion depth chatty (logical) Execution messages ... Additional arguments passed ls","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/get.object_sizes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursive Object Size Retrieval — get.object_sizes","text":"vector object sizes","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-bin-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fixed-Interval Binning Operator — %bin%","title":"Fixed-Interval Binning Operator — %bin%","text":"%bin% creates vector values represented multiples b","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-bin-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fixed-Interval Binning Operator — %bin%","text":"","code":"x %bin% b"},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-bin-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fixed-Interval Binning Operator — %bin%","text":"x (vector) vector numeric values b (integer) bin size use","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-bin-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fixed-Interval Binning Operator — %bin%","text":"input subtracting Modulo(b): x - (x %% b)","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-greater-than-less-than-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"test_between Operator — %><%","title":"test_between Operator — %><%","text":"test_between Operator","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-greater-than-less-than-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test_between Operator — %><%","text":"","code":"a %><% z"},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-greater-than-less-than-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"test_between Operator — %><%","text":"Preferably data table data frame, object can coerced z Preferably data table data frame, object can coerced ","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-greater-than-less-than-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"test_between Operator — %><%","text":"Boolean object comprised results testing \"-ness\"","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-help-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple IF-THEN-ELSE Operator — %?%","title":"Simple IF-THEN-ELSE Operator — %?%","text":"cond TRUE, result$true returned, cond == FALSE.  result, easiest way set available choices use %::%; otherwise, environment(-like) object members named 'true' 'false' must provided","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-help-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple IF-THEN-ELSE Operator — %?%","text":"","code":"cond %?% result"},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-help-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple IF-THEN-ELSE Operator — %?%","text":"cond (logical) vector evaluates TRUE FALSE result (tensor) Resultant values TRUE FALSE conditionals","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-help-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple IF-THEN-ELSE Operator — %?%","text":"data.table object comprised values occupying '' 'else' slots '--else' logical test","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-help-help-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlated IF-THEN-ELSE Comparison — %??%","title":"Correlated IF-THEN-ELSE Comparison — %??%","text":"element E cond, E TRUE, corresponding index result$true returned: cond == FALSE. important thing remember function returns value TRUE FALSE per row. result, easiest way set available choices use %tf%; otherwise, environment(-like) object members named true false.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-help-help-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlated IF-THEN-ELSE Comparison — %??%","text":"","code":"cond %??% result"},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-help-help-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlated IF-THEN-ELSE Comparison — %??%","text":"cond (logical) rank-n object row contains TRUE FALSE result (vector) rank-n object row contains resultant values element cond[m, n] containing values TRUE FALSE. result can different structure input case result heterogeneous lengths.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-help-help-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlated IF-THEN-ELSE Comparison — %??%","text":"list values, one element per row input.","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-if_na_empty-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace NA and Empty Values — %if_na_empty%","title":"Replace NA and Empty Values — %if_na_empty%","text":"function wrapper ifelse means modify2. NA empty values x replaced values provided y.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-if_na_empty-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace NA and Empty Values — %if_na_empty%","text":"","code":"x %if_na_empty% y"},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-if_na_empty-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace NA and Empty Values — %if_na_empty%","text":"x, y input replacement values, respectively. Data types treated per modify2, arguments must equal length","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-if_na_empty-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace NA and Empty Values — %if_na_empty%","text":"input NA empty values replaced.","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-tf-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"True-False Operator — %tf%","title":"True-False Operator — %tf%","text":"Use %tf% binary choice vectors can useful","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-tf-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"True-False Operator — %tf%","text":"","code":"true %tf% false"},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-tf-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"True-False Operator — %tf%","text":"true (logical) : Scalar vector value return TRUE  value false (logical) : Scalar vector value return FALSE value","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/grapes-tf-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"True-False Operator — %tf%","text":"data.table resultant values options true false","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/keyring_export.html","id":null,"dir":"Reference","previous_headings":"","what":"Export keyring Entries — keyring_export","title":"Export keyring Entries — keyring_export","text":"keyring_export creates JSON output available keyrings","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/keyring_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export keyring Entries — keyring_export","text":"","code":"keyring_export(keyring = NULL, as.raw = FALSE)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/keyring_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export keyring Entries — keyring_export","text":"keyring (string[]) name(s) keyrings export (defaults named keyrings calling keyring_list) .raw (logical | FALSE) entry cast raw vector?","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/keyring_export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export keyring Entries — keyring_export","text":"Keyring entries JSON raw-encoded JSON","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/keyring_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Import keyring Entries — keyring_import","title":"Import keyring Entries — keyring_import","text":"keyring_import registers exported keyrings (see keyring_export)","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/keyring_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import keyring Entries — keyring_import","text":"","code":"keyring_import(   kr_data,   kr_name = names(kr_data),   kr_pass = NULL,   dry.run = FALSE )"},{"path":"https://github.com/delriaan/book.of.utilities/reference/keyring_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import keyring Entries — keyring_import","text":"kr_data named list exported keyring data: name name existing keyring. kr_name (string) names target keyring(s) populate: defaults names kr_data kr_pass (string) password unlock existing keyrings: named list indicating per-keyring mapping single password (used supplied keyrings) unnamed list length kr_name dry.run (logical|FALSE) TRUE, expression evaluated returned (passwords redacted)","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/keyring_import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import keyring Entries — keyring_import","text":"list logical vectors indicating success failure import keyring entry","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/kr_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Store an encrypted keyring key — kr_key","title":"Store an encrypted keyring key — kr_key","text":"kr_key class","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/kr_key.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Store an encrypted keyring key — kr_key","text":"service See key_get username See key_get keyring See key_get key,password anonymous function retrieve return value current keyring key. update anonymous function set new value keyring key referenced object.","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/log_note.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Entry into a Development Log — log_note","title":"Create an Entry into a Development Log — log_note","text":"log_note serves wrapper cat provides easy way write plain-text file Even though original use-case real-time capturing developer notes, can used incremental writing file needed.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/log_note.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Entry into a Development Log — log_note","text":"","code":"log_note(..., file = \"\", show = FALSE, append = TRUE)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/log_note.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Entry into a Development Log — log_note","text":"... (dots_list): string(s) text write file.  Multiple values collapsed single string separated newline. Expressions allowed captured output included. file (string|\"\") name file ()write.  file given, output sent console. show (logical | FALSE) TRUE, print contents file (requires library readtext). append (logical | TRUE) TRUE new content appended.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/log_note.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an Entry into a Development Log — log_note","text":"See parameter show","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/odds2probs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate percentages from odds ratios — odds2probs","title":"Calculate percentages from odds ratios — odds2probs","text":"odds2probs converts odds ratios percentages.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/odds2probs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate percentages from odds ratios — odds2probs","text":"","code":"odds2probs(..., log = FALSE)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/odds2probs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate percentages from odds ratios — odds2probs","text":"... (dots_list): Numeric vectors \"odds\" strings (e.g., \"x:y\"). vectors string representations, number operands can length must represent positive real values. log (logical) inputs log-odds? TRUE, arguments length-1 processed -; otherwise, arguments natural-logged.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/odds2probs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate percentages from odds ratios — odds2probs","text":"numeric list length input(s) representing percentage odds ratio(s): values converted return NULL.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/odds2probs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate percentages from odds ratios — odds2probs","text":"Length-1 arguments assumed raw odds (log-odds)","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/odds2probs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate percentages from odds ratios — odds2probs","text":"","code":"odds2probs(c(3, 4), c(3L, 4L), \"3:4\", c(\"3\", \"4\"), c(4,5,6), \"6:3:1\", c(3,-1), \"1:1\", 1, 2/5, \"2:3\", 2)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/polyname2orig.html","id":null,"dir":"Reference","previous_headings":"","what":"Polynomial Names to Original — polyname2orig","title":"Polynomial Names to Original — polyname2orig","text":"polyname2orig renames column output call poly replacing ordinal slot original name","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/polyname2orig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polynomial Names to Original — polyname2orig","text":"","code":"polyname2orig(poly.names, orig.names, degree, ...)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/polyname2orig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polynomial Names to Original — polyname2orig","text":"poly.names (string[]) variable names polynomial conversion orig.names (string[]) variable names polynomial conversion degree (int) degree used polynomial conversion ... Arguments send paste, namely sep (default \"_\") collapse (default (\"x\"))","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/polyname2orig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polynomial Names to Original — polyname2orig","text":"polynomial names vector positions replaced original name elements","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/radix.html","id":null,"dir":"Reference","previous_headings":"","what":"Radix Conversion — radix","title":"Radix Conversion — radix","text":"radix converts representation input(s) using radix basis.  confused conversion scales.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/radix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Radix Conversion — radix","text":"","code":"radix(x, ...)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/radix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Radix Conversion — radix","text":"x (numeric[],symbol[]) One whole numbers: coercion non-numeric fractional input result loss precision. hexadecimal values, sure use \"0x\" prefix. ... (string,symbol,integer) target radix values x converted. Length: two values provided, output conversion first radix second String/symbol: given strings symbols, following supported (partial matching supported): binary octal decimal duodecimal hexadecimal vigesimal sexagesimal","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/radix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Radix Conversion — radix","text":"decimal representation input(s) using supplied radix.","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/radix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Radix Conversion — radix","text":"","code":"# As binary radix(12, bin) radix(c(12, 20), bin)  # To hexadecimal radix(c(12, 20), hex)  # As hex to decimal radix(c(18, 32), hex, dec)  # Hex to binary vs. as hex to binary (equivalent outcomes) radix(c(18, 32), hex, bin) radix(!!radix(c(12, 20), hex), hex, bin)  # Arbitrary radix radix(c(10, 26), 3)  # Arbitrary radix to hex radix(c(10, 26), 3, h)  # Mixed input types to binary radix(c(100, \"0110\"), b) radix(c(100, \"1001\", 0x1D), b)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/range_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Magnitude of a Range of Values — range_diff","title":"Magnitude of a Range of Values — range_diff","text":"range_diff calculates difference range values given input","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/range_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Magnitude of a Range of Values — range_diff","text":"","code":"range_diff(...)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/range_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Magnitude of a Range of Values — range_diff","text":"... (dots_list): numeric vector range corresponding difference calculated. list provided, calculation executed element list.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/range_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Magnitude of a Range of Values — range_diff","text":"scalar value inclusive difference upper lower boundaries range input vector","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/ranking.algorithm.html","id":null,"dir":"Reference","previous_headings":"","what":"Ranking Algorithm — ranking.algorithm","title":"Ranking Algorithm — ranking.algorithm","text":"ranking.algorithm ranks values across vector values","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/ranking.algorithm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ranking Algorithm — ranking.algorithm","text":"","code":"ranking.algorithm(   scores,   rank.size,   poss.scores,   test = `>=`,   rescale = 1,   map.only = FALSE,   show.all = FALSE,   use.futures = FALSE,   dflt.fn = min,   map.fn = (purrr::map) )"},{"path":"https://github.com/delriaan/book.of.utilities/reference/ranking.algorithm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ranking Algorithm — ranking.algorithm","text":"scores (vector) vector numeric scores rank rank.size (integer) number ranks allow poss.scores (vector) distinct values demarcating rank threshold test (object) function operator takes input scores, performs conditional test, returns logical vector equal length rescale (numeric) multiplier scales scores vector map.(logical|FALSE) TRUE, data.table object rank rank thresholds returned show.(logical|FALSE) TRUE, data.table object scores, ranks thresholds, ranks returned use.futures (logical|FALSE) TRUE, operation parallelized using futures dflt.fn (function) default function use replacing NA values ranks map.fn (function) function iterate scores computing output","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Ratio Calculator — ratio","title":"Ratio Calculator — ratio","text":"ratio calculates one following ratio types: \".sum\" (relative sum ) \".max\" (relative maximum value) \"cumulative\" (cumulative total vs. total) . Using related operator %ratio% assumes simple division total .","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ratio Calculator — ratio","text":"","code":"ratio(   i,   type = \"of.sum\",   as_density = FALSE,   sort.type = c(\"none\", \"value\", \"label\", \"num_label\"),   ... )"},{"path":"https://github.com/delriaan/book.of.utilities/reference/ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ratio Calculator — ratio","text":"(vector) numeric vector type (string[]) One types ratio methods use (see Details): vector supported values supported as_density (logical) TRUE returns x * p(1 - p), p vector cumulative proportions x sort.type (string,function) One following: \"none\" return along original order (default) \"value\" sort value \"label\" sort name: elements must named \"num_label\" sort numeral names: elements must named  ... dots_list: provided backwards-compatibility function signature changes. Sorting occurs input processed.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ratio Calculator — ratio","text":"numeric vector","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/ratio.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Ratio Calculator — ratio","text":"function produces values ratio scale, values internally shifted values >= 0.","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ratio Calculator — ratio","text":"","code":"(x <- sample(-100:100, 30))   (d <- cbind(    x    , of.sum = ratio(x, of.sum)    , of.sum.dens = ratio(x, of.sum, as = TRUE)    , of.max = ratio(x, of.max)    , of.max.dens = ratio(x, of.max, as = TRUE)    , cumulative = ratio(x, cumulative)    , cumulative.dens = ratio(x, cumulative, as = TRUE)    ))   plot(of.sum ~ x, data = d, main = \"of.sum\", col = \"red\")  plot(of.max ~ x, data = d, main = \"of.max\", col = \"green\")  plot(cumulative ~ x, data = d, main = \"cumulative\", col = \"blue\")  plot(of.sum.dens ~ x, data = d, main = \"of.sum w/ density\", col = \"red\")  points(of.max.dens ~ x, data = d, main = \"of.max w/ density\", col = \"green\")  points(cumulative.dens ~ x, data = d, main = \"cumulative w/ density\", col = \"blue\")   # sort.type:  (x2 <- sample(100, 5, TRUE) %>% rlang::set_names(. + 50))   list(    `orig := table(...)` = x2    , `ratio(<args>, sort.type = none)` = ratio(x2, sort.type = \"none\")    , `ratio(<args>, sort.type = value)` = ratio(x2, sort.type = \"value\")    , `ratio(<args>, sort.type = label)` = ratio(x2, sort.type = \"label\")    , `ratio(<args>, sort.type = num_label)` = ratio(x2, sort.type = \"num_label\")    )"},{"path":"https://github.com/delriaan/book.of.utilities/reference/test_between.html","id":null,"dir":"Reference","previous_headings":"","what":"","title":"","text":"test_between related operator %><% chunks inputs using row-wise 'apply' returns Boolean result matrix. arguments z vectors tensors, \"\" interpreted existence intersection domains spanned vectors/tensors. temporal TRUE, ordinal response returned depending value .text","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/test_between.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"","text":"","code":"test_between(a, z, temporal = FALSE, as.text = FALSE)"},{"path":"https://github.com/delriaan/book.of.utilities/reference/test_between.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"","text":"Preferably data table data frame, object can coerced z Preferably data table data frame, object can coerced temporal (logical) relative temporal output (e.g., , , ) returned integers -1 0 1 rather logical values? .text (logical) relative temporal output (e.g., , , ) returned words rather logical values?","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/test_between.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"","text":"Boolean object comprised results testing \"-ness\"","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/test_between.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"","text":".text FALSE: return matrix comprised \"-1, 0, 1\" denoting \"\" \"\" \"\" .text TRUE: return matrix comprised \"\" \"\" \"\"","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/vlogical.html","id":null,"dir":"Reference","previous_headings":"","what":"Vectorized Logical Tests — vlogical","title":"Vectorized Logical Tests — vlogical","text":"vlike vectorized version like allowing pattern vector supplied","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/vlogical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vectorized Logical Tests — vlogical","text":"","code":"vlogical(   vector,   vpattern,   test = stringi::stri_detect_regex,   simplify_with = NULL,   ... )"},{"path":"https://github.com/delriaan/book.of.utilities/reference/vlogical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vectorized Logical Tests — vlogical","text":"vector vector dimensional object processed (e.g., matrix, data.frame, etc.) vpattern named vector patterns matched test (function) function use logical testing: function appropriate values vpattern accepting vector first argument, pattern second, ... third (even used). simplify_with (function) function column-wise simplify logical matrix empty ... Additional arguments sent function held argument test","code":""},{"path":"https://github.com/delriaan/book.of.utilities/reference/vlogical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vectorized Logical Tests — vlogical","text":"logical matrix, rows length vector columns length vpattern simplify_with provided. Otherwise, result applying simplify_with column.","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/reference/vlogical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vectorized Logical Tests — vlogical","text":"","code":"# Test 1: vlogical(   vector = letters   , vpattern = c(sample(LETTERS, 5), sample(letters, 5))   , simplify_with = mean   , ignore.case = TRUE   )    # Test 2:   vl_data <- sapply(1:100000, function(i){         c(a = sample(LETTERS, 1), b = sample(letters, 1))       }) |>     data.table::as.data.table() |>   t();  head(vl_data, 10); dim(vl_data);  vlogical(   vector = vl_data   , vpattern = c(sample(LETTERS, 5), sample(letters, 5)) |> rlang::set_names()   , test = \\(vector, pattern, ...){ paste(unique(pattern), collapse = \"|\") |> grepl(vector)}   , simplify_with = NULL   , ignore.case = TRUE   )"},{"path":[]},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/news/index.html","id":"bug-fixes-0-2","dir":"Changelog","previous_headings":"0.2.13","what":"Bug Fixes","title":"book.of.utilities Version 0.2","text":"Fixed runtime error treated input log-odds adding argument log, allowing user indicate .","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/news/index.html","id":"bug-fixes-0-2-1","dir":"Changelog","previous_headings":"0.2.1220","what":"Bug Fixes","title":"book.of.utilities Version 0.2","text":"Fixed runtime error preventing key retrieved.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/news/index.html","id":"id_021210-0-2","dir":"Changelog","previous_headings":"","what":"0.2.1210","title":"book.of.utilities Version 0.2","text":"NA check *‘type == “cumulative”’ now error NA detected input. Fixed bug argument ‘sort.type’ ordering applied names output.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/news/index.html","id":"id_021110-0-2","dir":"Changelog","previous_headings":"","what":"0.2.1110","title":"book.of.utilities Version 0.2","text":"Names return input names. Helper functions pulled function now unexported library functions. Added NA check ‘type == “cumulative”’ since cumsum() ‘na.rm’ argument.","code":""},{"path":"https://github.com/delriaan/book.of.utilities/news/index.html","id":"id_021100-0-2","dir":"Changelog","previous_headings":"","what":"0.2.1100","title":"book.of.utilities Version 0.2","text":"Removed argument decimals Added argument ...: allows existing code referring decimals continue function without error, rounding take place. implemented version 0.2.1; however, oversight, argument decimals removed signature.","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/news/index.html","id":"bug-fixes-0-2-2","dir":"Changelog","previous_headings":"0.2.1","what":"Bug Fixes","title":"book.of.utilities Version 0.2","text":"Corrected logic handling argument ‘sort.type’ correctly sort output.","code":""},{"path":[]},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/news/index.html","id":"enhancements-0-1","dir":"Changelog","previous_headings":"0.1.6.7020","what":"Enhancements","title":"book.of.utilities Version 0.1","text":"Added argument sort.type allow specifying input sorted just transformed.","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/news/index.html","id":"enhancements-0-1-1","dir":"Changelog","previous_headings":"0.1.6.7011","what":"Enhancements","title":"book.of.utilities Version 0.1","text":"Improved method returning input density. Corrected handling argument decimals","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/news/index.html","id":"enhancements-0-1-2","dir":"Changelog","previous_headings":"0.1.6.7001","what":"Enhancements","title":"book.of.utilities Version 0.1","text":"Added ... signature allow passing arguments fun() Changed order signature ... immediately follows last required argument. calc.zero_mean(): function accepts numeric value argument use.population allowing population standard deviation provided explicitly.","code":""},{"path":[]},{"path":"https://github.com/delriaan/book.of.utilities/news/index.html","id":"general-updates-0-1","dir":"Changelog","previous_headings":"0.1.6.7","what":"General Updates","title":"book.of.utilities Version 0.1","text":"Updated purrr calls use anonymous style functions","code":""},{"path":"https://github.com/delriaan/book.of.utilities/news/index.html","id":"breaking-changes-0-1","dir":"Changelog","previous_headings":"0.1.6.7","what":"Breaking Changes","title":"book.of.utilities Version 0.1","text":"unregex(), .regex(), .regex(): longer exported likely removed future version. %?%: Removed ‘cond_id’ return object","code":""},{"path":"https://github.com/delriaan/book.of.utilities/news/index.html","id":"enhancements-0-1-3","dir":"Changelog","previous_headings":"0.1.6.7","what":"Enhancements","title":"book.of.utilities Version 0.1","text":"gen.pass(): Expanded default glyphs count.cycles(): Argument ‘reset’ now accepts un-evaluated expressions must evaluate logical vector length-1 .","code":""},{"path":"https://github.com/delriaan/book.of.utilities/news/index.html","id":"id_0166-0-1","dir":"Changelog","previous_headings":"","what":"0.1.6.6","title":"book.of.utilities Version 0.1","text":"Minor documentation updates radix(): Added support hexadecimal input: prefix values 0x use. %??%(): Redesigned function updated documentation. vlogical(): Fixed bug correctly accept values vpattern indicated.","code":""}]
