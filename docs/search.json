[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chionesu George. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"George C (2023). book..utilities: Utilities Working Data. R package version 1.1.2.","code":"@Manual{,   title = {book.of.utilities: Utilities for Working with Data},   author = {Chionesu George},   year = {2023},   note = {R package version 1.1.2}, }"},{"path":"/index.html","id":"book-of-utilities-overview","dir":"","previous_headings":"","what":"Utilities for Working with Data","title":"Utilities for Working with Data","text":"book..utilities seeks facilitate execution repetitive, ad-hoc tasks often encountered data processing. following functional families covered book..utilities:","code":""},{"path":"/index.html","id":"calculators","dir":"","previous_headings":"","what":"Calculators","title":"Utilities for Working with Data","text":"range.diff calc.means calc.geo_means calc.harmonic_mean calc.rms ratio ranking.algorithm","code":""},{"path":"/index.html","id":"object-management","dir":"","previous_headings":"","what":"Object Management","title":"Utilities for Working with Data","text":"distinct.list enlist scrub.data fill.na","code":""},{"path":"/index.html","id":"counters","dir":"","previous_headings":"","what":"Counters","title":"Utilities for Working with Data","text":"count.cycles factor.int","code":""},{"path":"/index.html","id":"custom-operators","dir":"","previous_headings":"","what":"Custom Operators","title":"Utilities for Working with Data","text":"%bin% %><% %tf%, %::% %?% %??% %%","code":""},{"path":"/index.html","id":"miscellaneous","dir":"","previous_headings":"","what":"Miscellaneous","title":"Utilities for Working with Data","text":"log_note vlogical .regex .regex unregex polyname2orig gen.primes","code":""},{"path":"/reference/as.regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Tag a Regular-Expression String — as.regex","title":"Tag a Regular-Expression String — as.regex","text":".regex() adds class \"regex\" strings passed ...","code":""},{"path":"/reference/as.regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tag a Regular-Expression String — as.regex","text":"","code":"as.regex(...)"},{"path":"/reference/as.regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tag a Regular-Expression String — as.regex","text":"... (dots_list): string set \"regex\"","code":""},{"path":"/reference/as.regex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tag a Regular-Expression String — as.regex","text":"string appended attribute \"regex\" set TRUE","code":""},{"path":"/reference/as_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantiles Transformation — as_quantile","title":"Quantiles Transformation — as_quantile","text":"as_quantile wrapper quantile.","code":""},{"path":"/reference/as_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantiles Transformation — as_quantile","text":"","code":"as_quantile(x, ...)"},{"path":"/reference/as_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantiles Transformation — as_quantile","text":"x input vector ... (dots_list): Additional arguments sent quantile","code":""},{"path":"/reference/as_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantiles Transformation — as_quantile","text":"quantile representation input","code":""},{"path":[]},{"path":"/reference/Book-of-Utilities-Package.html","id":null,"dir":"Reference","previous_headings":"","what":"Book of Utilities Overview — Book of Utilities Package","title":"Book of Utilities Overview — Book of Utilities Package","text":"book..utilities seeks facilitate execution repetitive, ad-hoc tasks often encountered data processing. following functional families covered book..utilities:","code":""},{"path":"/reference/Book-of-Utilities-Package.html","id":"calculators","dir":"Reference","previous_headings":"","what":"Calculators","title":"Book of Utilities Overview — Book of Utilities Package","text":"range.diff calc.means calc.geo_means calc.harmonic_mean calc.rms ratio ranking.algorithm","code":""},{"path":"/reference/Book-of-Utilities-Package.html","id":"object-management","dir":"Reference","previous_headings":"","what":"Object Management","title":"Book of Utilities Overview — Book of Utilities Package","text":"distinct.list enlist scrub.data fill.na","code":""},{"path":"/reference/Book-of-Utilities-Package.html","id":"counters","dir":"Reference","previous_headings":"","what":"Counters","title":"Book of Utilities Overview — Book of Utilities Package","text":".count count.cycles factor.int","code":""},{"path":"/reference/Book-of-Utilities-Package.html","id":"custom-operators","dir":"Reference","previous_headings":"","what":"Custom Operators","title":"Book of Utilities Overview — Book of Utilities Package","text":"%bin% %><% %::% %?% %??% %%","code":""},{"path":"/reference/Book-of-Utilities-Package.html","id":"miscellaneous","dir":"Reference","previous_headings":"","what":"Miscellaneous","title":"Book of Utilities Overview — Book of Utilities Package","text":"mark.time log_note vlogical .regex .regex unregex polyname2orig gen.primes","code":""},{"path":"/reference/book.of.utilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Book of Utilities Overview — book.of.utilities","title":"Book of Utilities Overview — book.of.utilities","text":"book..utilities seeks facilitate execution repetitive, ad-hoc tasks often encountered data processing. following functional families covered book..utilities:","code":""},{"path":"/reference/book.of.utilities.html","id":"calculators","dir":"Reference","previous_headings":"","what":"Calculators","title":"Book of Utilities Overview — book.of.utilities","text":"range.diff calc.means calc.geo_means calc.harmonic_mean calc.rms ratio ranking.algorithm","code":""},{"path":"/reference/book.of.utilities.html","id":"object-management","dir":"Reference","previous_headings":"","what":"Object Management","title":"Book of Utilities Overview — book.of.utilities","text":"distinct.list enlist scrub.data fill.na","code":""},{"path":"/reference/book.of.utilities.html","id":"counters","dir":"Reference","previous_headings":"","what":"Counters","title":"Book of Utilities Overview — book.of.utilities","text":"count.cycles factor.int","code":""},{"path":"/reference/book.of.utilities.html","id":"custom-operators","dir":"Reference","previous_headings":"","what":"Custom Operators","title":"Book of Utilities Overview — book.of.utilities","text":"%bin% %><% %::% %?% %??% %%","code":""},{"path":"/reference/book.of.utilities.html","id":"miscellaneous","dir":"Reference","previous_headings":"","what":"Miscellaneous","title":"Book of Utilities Overview — book.of.utilities","text":"mark.time log_note vlogical .regex .regex unregex polyname2orig gen.primes","code":""},{"path":"/reference/calc.geo_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Geometric Mean — calc.geo_mean","title":"Calculate the Geometric Mean — calc.geo_mean","text":"alias calls calc.means(, \"gm\")","code":""},{"path":"/reference/calc.geo_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Geometric Mean — calc.geo_mean","text":"","code":"calc.geo_mean(a, post.op = eval)"},{"path":"/reference/calc.geo_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Geometric Mean — calc.geo_mean","text":"(vector) vector numeric values post.op See calc.means","code":""},{"path":[]},{"path":"/reference/calc.harmonic_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Harmonic Mean — calc.harmonic_mean","title":"Calculate the Harmonic Mean — calc.harmonic_mean","text":"alias calls calc.means(, \"hm\")","code":""},{"path":"/reference/calc.harmonic_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Harmonic Mean — calc.harmonic_mean","text":"","code":"calc.harmonic_mean(a, post.op = eval)"},{"path":"/reference/calc.harmonic_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Harmonic Mean — calc.harmonic_mean","text":"(vector) vector numeric values post.op See calc.means","code":""},{"path":[]},{"path":"/reference/calc.means.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Means — calc.means","title":"Calculate Means — calc.means","text":"calc.means calculates various types central-tendency measures vector passed argument ","code":""},{"path":"/reference/calc.means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Means — calc.means","text":"","code":"calc.means(   data,   mean.type = \"am\",   post.op = eval,   as.zscore = FALSE,   use.population = FALSE,   ... )"},{"path":"/reference/calc.means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Means — calc.means","text":"data (numeric): numeric vector mean.type (string): character vector types mean value operations execute (see \"Details\") post.op (call | eval): function process output returning .zscore (logical | FALSE) output transformed Z-scores? use.population (logical | FALSE) population standard deviation used (ignored .zscore==FALSE)? ... Additional arguments passed functions","code":""},{"path":"/reference/calc.means.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Means — calc.means","text":"Arguments data, mean.type, post.op determine return type.","code":""},{"path":"/reference/calc.means.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Means — calc.means","text":"mean.type contains multiple values, list object returned containing one member output; otherwise, single value returned class dependent value mean.type. Valid mean.type values follows: \"\" (Arithmetic-Mean https://en.wikipedia.org/wiki/Arithmetic_mean): Return sum vector values divided magnitude vector \"zm\" (Zero-Mean): Return vector mean vector subtracted values \"gm\" (Geometric Mean https://en.wikipedia.org/wiki/Geometric_mean): Return n-th root product n-element input vector.  Negative input values allowed, resulting complex result \"hm\" (Harmonic Mean https://en.wikipedia.org/wiki/Harmonic_mean): Return reciprocal arithmetic mean reciprocal elements input vector \"rms\"(Root Mean Squared https://en.wikipedia.org/wiki/Root_mean_square): Return square-root arithmetic mean squares elements input vector","code":""},{"path":[]},{"path":"/reference/calc.range_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Alias for range_diff — calc.range_diff","title":"Alias for range_diff — calc.range_diff","text":"Alias range_diff","code":""},{"path":"/reference/calc.range_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alias for range_diff — calc.range_diff","text":"","code":"calc.range_diff(...)"},{"path":"/reference/calc.rms.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Root-Mean-Square — calc.rms","title":"Calculate the Root-Mean-Square — calc.rms","text":"alias calls calc.means(, \"rms\")","code":""},{"path":"/reference/calc.rms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Root-Mean-Square — calc.rms","text":"","code":"calc.rms(a, post.op = eval)"},{"path":"/reference/calc.rms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Root-Mean-Square — calc.rms","text":"(vector) vector numeric values post.op See calc.means","code":""},{"path":[]},{"path":"/reference/calc.zero_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Zero-Mean — calc.zero_mean","title":"Calculate the Zero-Mean — calc.zero_mean","text":"calc.zero_mean subtracts mean input","code":""},{"path":"/reference/calc.zero_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Zero-Mean — calc.zero_mean","text":"","code":"calc.zero_mean(a, post.op = eval, as.zscore = FALSE, use.population = FALSE)"},{"path":"/reference/calc.zero_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Zero-Mean — calc.zero_mean","text":"(vector) vector numeric values post.op See calc.means .zscore (logical | FALSE) output transformed Z-scores? use.population (logical | FALSE) population standard deviation used (ignored .zscore==FALSE)?","code":""},{"path":"/reference/calc.zero_mean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Zero-Mean — calc.zero_mean","text":"alias calls calc.means(, \"hm\")","code":""},{"path":[]},{"path":"/reference/count.cycles.html","id":null,"dir":"Reference","previous_headings":"","what":"Cycle Counter — count.cycles","title":"Cycle Counter — count.cycles","text":"count.cycles detects maps conditional occurrence frequency","code":""},{"path":"/reference/count.cycles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cycle Counter — count.cycles","text":"","code":"count.cycles(cond, offset = 1, reset)"},{"path":"/reference/count.cycles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cycle Counter — count.cycles","text":"cond (logical[]) logical vector offset (integer|1) integer defining series origin reset (logical[]) logical vector length cond TRUE, cycle counter resets offset","code":""},{"path":"/reference/count.cycles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cycle Counter — count.cycles","text":"one-based (default), conditionally-incremented series","code":""},{"path":[]},{"path":"/reference/distinct.list.html","id":null,"dir":"Reference","previous_headings":"","what":"Unique List Selection — distinct.list","title":"Unique List Selection — distinct.list","text":"Return distinct set first-level list elements based respective base64-encoded signatures.  inefficient implementation used nested lists","code":""},{"path":"/reference/distinct.list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unique List Selection — distinct.list","text":"","code":"distinct.list(i, logical.only = FALSE)"},{"path":"/reference/distinct.list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unique List Selection — distinct.list","text":"(object) input list object (coercible) logical.(logical) TRUE, logical vector returned","code":""},{"path":"/reference/distinct.list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unique List Selection — distinct.list","text":"list unique, first-level child elements","code":""},{"path":[]},{"path":"/reference/do_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Stuff — do_count","title":"Count Stuff — do_count","text":"Count Stuff","code":""},{"path":"/reference/do_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Stuff — do_count","text":"","code":"do_count(i, distinct = FALSE)"},{"path":"/reference/do_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Stuff — do_count","text":"vector things count distinct (logical) TRUE, distinct count objects returned","code":""},{"path":"/reference/do_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Stuff — do_count","text":"count elements , possibly distinct","code":""},{"path":[]},{"path":"/reference/enlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Named List — enlist","title":"Create a Named List — enlist","text":"enlist() creates list atomic vector.  names length input provided ..., list members named accordingly produced.  Otherwise, members named values (eg. list(=\"\", =\"\") ): default behavior.","code":""},{"path":"/reference/enlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Named List — enlist","text":"","code":"enlist(x, ...)"},{"path":"/reference/enlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Named List — enlist","text":"x vector values ... (dots_list):: Names use list members: must length x.  Can vector atomic listing.","code":""},{"path":"/reference/enlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Named List — enlist","text":"list, names values x","code":""},{"path":[]},{"path":"/reference/factor.int.html","id":null,"dir":"Reference","previous_headings":"","what":"Factorization of Integers — factor.int","title":"Factorization of Integers — factor.int","text":"Factorization Integers","code":""},{"path":"/reference/factor.int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factorization of Integers — factor.int","text":"","code":"factor.int(i, ...)"},{"path":"/reference/factor.int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factorization of Integers — factor.int","text":"(integer[]) One integers factor ... Additional integers factor (can used conjunction )","code":""},{"path":"/reference/factor.int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factorization of Integers — factor.int","text":"factors input given vector list vectors","code":""},{"path":[]},{"path":"/reference/fill.na.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill in a Sparse Vector\r\nfill.na fills in positions equivalent to val with the first preceding value not equal to val — fill.na","title":"Fill in a Sparse Vector\r\nfill.na fills in positions equivalent to val with the first preceding value not equal to val — fill.na","text":"Fill Sparse Vector fill.na fills positions equivalent val first preceding value equal val","code":""},{"path":"/reference/fill.na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill in a Sparse Vector\r\nfill.na fills in positions equivalent to val with the first preceding value not equal to val — fill.na","text":"","code":"fill.na(i, incl.null = TRUE)"},{"path":"/reference/fill.na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill in a Sparse Vector\r\nfill.na fills in positions equivalent to val with the first preceding value not equal to val — fill.na","text":"input vector incl.null (logical) NULL values accepted NA's?","code":""},{"path":"/reference/fill.na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill in a Sparse Vector\r\nfill.na fills in positions equivalent to val with the first preceding value not equal to val — fill.na","text":"input vector values filled ","code":""},{"path":[]},{"path":"/reference/gen.primes.html","id":null,"dir":"Reference","previous_headings":"","what":"Prime Number Generator — gen.primes","title":"Prime Number Generator — gen.primes","text":"get.primes generates n prime numbers..","code":""},{"path":"/reference/gen.primes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prime Number Generator — gen.primes","text":"","code":"gen.primes(   n = 1,   domain = 2:n,   random = FALSE,   distinct = TRUE,   chatty = FALSE )"},{"path":"/reference/gen.primes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prime Number Generator — gen.primes","text":"n (integer) number prime numbers generate domain (integer[]) range prime numbers fall given length two (2) integer vector random (logical) TRUE, internally-generated vector subsetted via sampling distinct (logical) TRUE, unique (sorted) values returned chatty (logical) TRUE, various output printed console, mainly debugging purposes .length (integer) number prime numbers generate return","code":""},{"path":"/reference/gen.primes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prime Number Generator — gen.primes","text":"vector prime numbers","code":""},{"path":"/reference/get.object_sizes.html","id":null,"dir":"Reference","previous_headings":"","what":"Recursive Object Size Retrieval — get.object_sizes","title":"Recursive Object Size Retrieval — get.object_sizes","text":"get.object_sizes recursively steps child environments, retrieving object sizes along way","code":""},{"path":"/reference/get.object_sizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursive Object Size Retrieval — get.object_sizes","text":"","code":"get.object_sizes(   i = .GlobalEnv,   nm = as.character(substitute(i)),   depth = 0L,   max.depth = 2L,   chatty = FALSE,   ... )"},{"path":"/reference/get.object_sizes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursive Object Size Retrieval — get.object_sizes","text":"(object) top-level object nm (string) object name current iteration depth (integer) current iteration depth max.depth (integer) maximum recursion depth chatty (logical) Execution messages ... Additional arguments passed ls","code":""},{"path":"/reference/get.object_sizes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursive Object Size Retrieval — get.object_sizes","text":"vector object sizes","code":""},{"path":[]},{"path":"/reference/grapes-all-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve %all% Elements by Name — %all%","title":"Retrieve %all% Elements by Name — %all%","text":"%% intended operate named object duplicate names.  idea allow \"soft\" accessing name","code":""},{"path":"/reference/grapes-all-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve %all% Elements by Name — %all%","text":"","code":"i %all% ..."},{"path":"/reference/grapes-all-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve %all% Elements by Name — %all%","text":"named input object ... Symbols strings objects return logical.(logical) TRUE, logical vector list returned instead values satisfying condition chatty (logical) TRUE, additional information printed console","code":""},{"path":"/reference/grapes-all-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve %all% Elements by Name — %all%","text":"object containing values logical results relative names input","code":""},{"path":[]},{"path":"/reference/grapes-bin-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fixed-Interval Binning Operator — %bin%","title":"Fixed-Interval Binning Operator — %bin%","text":"%bin% creates vector values represented multiples b","code":""},{"path":"/reference/grapes-bin-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fixed-Interval Binning Operator — %bin%","text":"","code":"x %bin% b"},{"path":"/reference/grapes-bin-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fixed-Interval Binning Operator — %bin%","text":"x (vector) vector numeric values b (integer) bin size use","code":""},{"path":"/reference/grapes-bin-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fixed-Interval Binning Operator — %bin%","text":"input subtracting Modulo(b): x - (x %% b)","code":""},{"path":[]},{"path":"/reference/grapes-greater-than-less-than-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"","title":"","text":"%><% chunks inputs using row-wise 'apply' returns Boolean result matrix. arguments z vectors tensors, \"\" interpreted existence intersection domains spanned vectors/tensors. temporal TRUE, ordinal response returned depending value .text","code":""},{"path":"/reference/grapes-greater-than-less-than-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"","text":"","code":"a %><% z"},{"path":"/reference/grapes-greater-than-less-than-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"","text":"Preferably data table data frame, object can coerced z Preferably data table data frame, object can coerced temporal (logical) relative temporal output, e.g., , , , returned integers -1 0 1 rather logical values? .text (logical) relative temporal output, e.g., , , , returned words rather logical values? ... (used)","code":""},{"path":"/reference/grapes-greater-than-less-than-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"","text":"Boolean object comprised results testing \"-ness\"","code":""},{"path":"/reference/grapes-greater-than-less-than-grapes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"","text":".text FALSE: return matrix comprised \"-1, 0, 1\" denoting \"\" \"\" \"\" .text TRUE: return matrix comprised \"\" \"\" \"\"","code":""},{"path":[]},{"path":"/reference/grapes-help-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple IF-THEN-ELSE Operator — %?%","title":"Simple IF-THEN-ELSE Operator — %?%","text":"cond TRUE, result$true returned, cond == FALSE.  result, easiest way set available choices use %::%; otherwise, environment(-like) object members named 'true' 'false' must provided","code":""},{"path":"/reference/grapes-help-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple IF-THEN-ELSE Operator — %?%","text":"","code":"cond %?% result"},{"path":"/reference/grapes-help-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple IF-THEN-ELSE Operator — %?%","text":"cond (logical) vector evaluates TRUE FALSE result (tensor) Resultant values TRUE FALSE conditionals","code":""},{"path":"/reference/grapes-help-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple IF-THEN-ELSE Operator — %?%","text":"data.table object comprised values occupying '' 'else' slots '--else' logical test","code":""},{"path":[]},{"path":"/reference/grapes-help-help-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlated IF-THEN-ELSE Comparison — %??%","title":"Correlated IF-THEN-ELSE Comparison — %??%","text":"element E cond, E TRUE, corresponding index result$true returned: cond == FALSE. result, easiest way set available choices use %::%; otherwise, environment(-like) object members named true false","code":""},{"path":"/reference/grapes-help-help-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlated IF-THEN-ELSE Comparison — %??%","text":"","code":"cond %??% result"},{"path":"/reference/grapes-help-help-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlated IF-THEN-ELSE Comparison — %??%","text":"cond (logical) vector tensor evaluates TRUE FALSE result (vector) Resultant values TRUE FALSE conditionals, ideally stored dimension-ed object (e.g, data.frame, data.table)","code":""},{"path":[]},{"path":"/reference/grapes-tf-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Decision Operator: %tf% — %tf%","title":"Decision Operator: %tf% — %tf%","text":"Use %tf% %::% anywhere binary choice vectors can useful","code":""},{"path":"/reference/grapes-tf-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decision Operator: %tf% — %tf%","text":"","code":"true %tf% false"},{"path":"/reference/grapes-tf-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decision Operator: %tf% — %tf%","text":"id (scalar) : Scalar vector value return identifier result ... (used) tr (logical) : Scalar vector value return TRUE  value fls (logical) : Scalar vector value return FALSE value","code":""},{"path":"/reference/grapes-tf-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decision Operator: %tf% — %tf%","text":"data.table resultant values options true false","code":""},{"path":[]},{"path":"/reference/is.regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for Class 'regex' — is.regex","title":"Test for Class 'regex' — is.regex","text":".regex returns TRUE value contains class \"regex\"","code":""},{"path":"/reference/is.regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for Class 'regex' — is.regex","text":"","code":"is.regex(i)"},{"path":"/reference/is.regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for Class 'regex' — is.regex","text":"(string[]) string string vector","code":""},{"path":"/reference/log_note.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Entry into a Development Log — log_note","title":"Create an Entry into a Development Log — log_note","text":"log_note serves wrapper cat provides easy way write plain-text file Even though original use-case real-time capturing developer notes, can used incremental writing file needed.","code":""},{"path":"/reference/log_note.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Entry into a Development Log — log_note","text":"","code":"log_note(..., file = \"\", show = FALSE, append = TRUE)"},{"path":"/reference/log_note.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Entry into a Development Log — log_note","text":"... (dots_list): string(s) text write file.  Multiple values collapsed single string separated newline. Expressions allowed captured output included. file (string|\"\") name file ()write.  file given, output sent console. show (logical | FALSE) TRUE, print contents file (requires library readtext). append (logical | TRUE) TRUE new content appended.","code":""},{"path":"/reference/log_note.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an Entry into a Development Log — log_note","text":"See parameter show","code":""},{"path":"/reference/mark.time.html","id":null,"dir":"Reference","previous_headings":"","what":"Time Stamp Utility — mark.time","title":"Time Stamp Utility — mark.time","text":"mark.time generates timestamps execution workflow","code":""},{"path":"/reference/mark.time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time Stamp Utility — mark.time","text":"","code":"mark.time(   msg = \"\",   reset = TRUE,   lap = FALSE,   end = FALSE,   history = FALSE,   ... )"},{"path":"/reference/mark.time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time Stamp Utility — mark.time","text":"msg (string) message print along side timestamp; defaults \"\" reset (logical | TRUE) TRUE resets closure replaces stopwatch lap (logical | FALSE) TRUE preserves closure appends stopwatch end (logical | FALSE) TRUE resets closure appends stopwatch. history (logical | FALSE) TRUE shows current contents stopwatch exits without taking additional action ... used.","code":""},{"path":"/reference/mark.time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time Stamp Utility — mark.time","text":"copy library function","code":""},{"path":"/reference/mark.time.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Time Stamp Utility — mark.time","text":"Assign function variable delegate invoke variable function.  default, call function toggle message returned indicating beginning end execution along time invocation.  See Advanced R Hadley Wickham: Closures additional context. parameters independent; therefore, logical assumed","code":""},{"path":"/reference/op.all.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve %all% Elements by Name — op.all","title":"Retrieve %all% Elements by Name — op.all","text":"op.intended operate named object duplicate names.  idea allow \"soft\" accessing name","code":""},{"path":"/reference/op.all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve %all% Elements by Name — op.all","text":"","code":"op.all(i, ..., logical.out = FALSE, chatty = FALSE)"},{"path":"/reference/op.all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve %all% Elements by Name — op.all","text":"named input object ... Symbols strings objects return logical.(logical) TRUE, logical vector list returned instead values satisfying condition chatty (logical) TRUE, additional information printed console","code":""},{"path":"/reference/op.all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve %all% Elements by Name — op.all","text":"object containing values logical results relative names input","code":""},{"path":[]},{"path":"/reference/op.bin.html","id":null,"dir":"Reference","previous_headings":"","what":"Fixed-Interval Binning Operator: %bin% — op.bin","title":"Fixed-Interval Binning Operator: %bin% — op.bin","text":"op.bin creates vector values represented multiples b","code":""},{"path":"/reference/op.bin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fixed-Interval Binning Operator: %bin% — op.bin","text":"","code":"op.bin(x, b)"},{"path":"/reference/op.bin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fixed-Interval Binning Operator: %bin% — op.bin","text":"x (vector) vector numeric values b (integer) bin size use","code":""},{"path":"/reference/op.bin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fixed-Interval Binning Operator: %bin% — op.bin","text":"input subtracting Modulo(b): x - (x %% b)","code":""},{"path":[]},{"path":"/reference/op.btwn.html","id":null,"dir":"Reference","previous_headings":"","what":"","title":"","text":"op.btwn chunks inputs using row-wise 'apply' returns boolean result matrix. arguments z vectors tensors, \"\" interpreted existence intersection domains spanned vectors/tensors. temporal TRUE, ordinal response returned depending value .text","code":""},{"path":"/reference/op.btwn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"","text":"","code":"op.btwn(a, z, temporal = FALSE, as.text = FALSE, debug = FALSE)"},{"path":"/reference/op.btwn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"","text":"Preferrably data table data frame, object can coerced z Preferrably data table data frame, object can coerced temporal (logical) relative temporal output, e.g., , , , returned integers -1 0 1 rather logical values? .text (logical) relative temporal output, e.g., , , , returned words rather logical values?","code":""},{"path":"/reference/op.btwn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"","text":"Boolean object comprised results testing \"-ness\"","code":""},{"path":"/reference/op.btwn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"","text":".text FALSE: return matrix comprised \"-1, 0, 1\" denoting \"\" \"\" \"\" .text TRUE: return matrix comprised \"\" \"\" \"\"","code":""},{"path":[]},{"path":"/reference/op.ifelse.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple IF-THEN-ELSE Operator: %?% — op.ifelse","title":"Simple IF-THEN-ELSE Operator: %?% — op.ifelse","text":"cond TRUE, result$true returned, cond == FALSE.  result, easiest way set available choices use %::%; otherwise, environment(-like) object members named 'true' 'false' must provided","code":""},{"path":"/reference/op.ifelse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple IF-THEN-ELSE Operator: %?% — op.ifelse","text":"","code":"op.ifelse(cond, result)"},{"path":"/reference/op.ifelse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple IF-THEN-ELSE Operator: %?% — op.ifelse","text":"cond (logical) vector evaluates TRUE FALSE result (tensor) Resultant values TRUE FALSE conditionals","code":""},{"path":"/reference/op.ifelse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple IF-THEN-ELSE Operator: %?% — op.ifelse","text":"data.table object comprised values occupying '' 'else' slots '--else' logical test","code":""},{"path":[]},{"path":"/reference/op.ifelse2.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlated IF-THEN-ELSE Comparison %??% — op.ifelse2","title":"Correlated IF-THEN-ELSE Comparison %??% — op.ifelse2","text":"element E cond, E TRUE, corresponding index result$true returned: cond == FALSE. result, easiest way set available choices use %::%; otherwise, environment(-like) object members named true false","code":""},{"path":"/reference/op.ifelse2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlated IF-THEN-ELSE Comparison %??% — op.ifelse2","text":"","code":"op.ifelse2(cond, result)"},{"path":"/reference/op.ifelse2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlated IF-THEN-ELSE Comparison %??% — op.ifelse2","text":"cond (logical) vector tensor evaluates TRUE FALSE result (vector) Resultant values TRUE FALSE conditionals, ideally stored dimension-ed object (e.g, data.frame, data.table)","code":""},{"path":[]},{"path":"/reference/op.true_false.html","id":null,"dir":"Reference","previous_headings":"","what":"Decision Operator: %::% — op.true_false","title":"Decision Operator: %::% — op.true_false","text":"Use op.true_false anywhere binary choice vectors can useful","code":""},{"path":"/reference/op.true_false.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decision Operator: %::% — op.true_false","text":"","code":"op.true_false(tr = TRUE, fls = FALSE, id = 0, ...)"},{"path":"/reference/op.true_false.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decision Operator: %::% — op.true_false","text":"tr (logical) : Scalar vector value return TRUE  value fls (logical) : Scalar vector value return FALSE value id (scalar) : Scalar vector value return identifier result ... (used)","code":""},{"path":"/reference/op.true_false.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decision Operator: %::% — op.true_false","text":"data.table resultant values options true false","code":""},{"path":[]},{"path":"/reference/polyname2orig.html","id":null,"dir":"Reference","previous_headings":"","what":"Polynomial Names to Original — polyname2orig","title":"Polynomial Names to Original — polyname2orig","text":"polyname2orig renames column output call poly replacing ordinal slot original name","code":""},{"path":"/reference/polyname2orig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polynomial Names to Original — polyname2orig","text":"","code":"polyname2orig(poly.names, orig.names, degree, ...)"},{"path":"/reference/polyname2orig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polynomial Names to Original — polyname2orig","text":"poly.names (string[]) variable names polynomial conversion orig.names (string[]) variable names polynomial conversion degree (int) degree used polynomial conversion ... Arguments send paste, namely sep (default \"_\") collapse (default (\"x\")) object created call poly","code":""},{"path":"/reference/polyname2orig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polynomial Names to Original — polyname2orig","text":"polynomial names vector positions replaced original name elements","code":""},{"path":"/reference/range_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Magnitude of a Range of Values — range_diff","title":"Magnitude of a Range of Values — range_diff","text":"calc.range_diff calculates difference range values given input","code":""},{"path":"/reference/range_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Magnitude of a Range of Values — range_diff","text":"","code":"range_diff(...)"},{"path":"/reference/range_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Magnitude of a Range of Values — range_diff","text":"... (dots_list): numeric vector range corresponding difference calculated. list provided, calculation executed element list.","code":""},{"path":"/reference/range_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Magnitude of a Range of Values — range_diff","text":"scalar value inclusive difference upper lower boundaries range input vector","code":""},{"path":[]},{"path":"/reference/ranking.algorithm.html","id":null,"dir":"Reference","previous_headings":"","what":"Ranking Algorithm — ranking.algorithm","title":"Ranking Algorithm — ranking.algorithm","text":"ranking.algorithm ranks values across vector values","code":""},{"path":"/reference/ranking.algorithm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ranking Algorithm — ranking.algorithm","text":"","code":"ranking.algorithm(   scores,   rank.size,   poss.scores,   test = `>=`,   rescale = 1,   map.only = FALSE,   show.all = FALSE,   use.futures = FALSE,   dflt.fn = min,   map.fn = (purrr::map) )"},{"path":"/reference/ranking.algorithm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ranking Algorithm — ranking.algorithm","text":"scores (vector) vector numeric scores rank rank.size (integer) number ranks allow poss.scores (vector) distinct values demarcating rank threshold test (object) function operator takes input scores, performs conditional test, returns logical vector equal length rescale (numeric) multiplier scales scores vector map.(logical|FALSE) TRUE, data.table object rank rank thresholds returned show.(logical|FALSE) TRUE, data.table object scores, ranks thresholds, ranks returned use.futures (logical|FALSE) TRUE, operation parallelized using futures dflt.fn (function) default function use replacing NA values ranks map.fn (function) function iterate scores computing output","code":""},{"path":[]},{"path":"/reference/ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Ratio Calculator — ratio","title":"Ratio Calculator — ratio","text":"ratio calculates one following ratio types: \"pareto\" (cumulative total vs. total) \".max|.min\" (relative maximum/minimum value) NULL (relative total) . Using related operator %ratio% assumes simple division total j.","code":""},{"path":"/reference/ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ratio Calculator — ratio","text":"","code":"ratio(i, j = i, type = NULL, decimals = 2)"},{"path":"/reference/ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ratio Calculator — ratio","text":"(vector) vector numeric scores numerator j (vector) number numeric scores denominator type (string[]) types ratio algorithms use (see Details): vector values supported decimals (integer | 2) number decimal places output rounded","code":""},{"path":[]},{"path":"/reference/scrub.data.html","id":null,"dir":"Reference","previous_headings":"","what":"Scrub and Replace Values — scrub.data","title":"Scrub and Replace Values — scrub.data","text":"scrub.data replaces values meet condition given function passed condFn","code":""},{"path":"/reference/scrub.data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scrub and Replace Values — scrub.data","text":"","code":"scrub.data(input, condFn = is.na, replacement, ...)"},{"path":"/reference/scrub.data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scrub and Replace Values — scrub.data","text":"... (used) input: object contains values scrub condFn: function name function expression serves test values scrub replacement: replacement value","code":""},{"path":[]},{"path":"/reference/unregex.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert REGEX Pattern to Object Names — unregex","title":"Convert REGEX Pattern to Object Names — unregex","text":"Convert REGEX Pattern Object Names","code":""},{"path":"/reference/unregex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert REGEX Pattern to Object Names — unregex","text":"","code":"unregex(i, x)"},{"path":"/reference/unregex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert REGEX Pattern to Object Names — unregex","text":"(string[]) string string vector.  Pattern matching executed string class regex\" (see .regex, .regex) x (object) names search object column names","code":""},{"path":"/reference/unregex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert REGEX Pattern to Object Names — unregex","text":"Matching values x based values ","code":""},{"path":"/reference/vlogical.html","id":null,"dir":"Reference","previous_headings":"","what":"Vectorized Logical Tests — vlogical","title":"Vectorized Logical Tests — vlogical","text":"vlike vectorized version like allowing pattern vector supplied","code":""},{"path":"/reference/vlogical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vectorized Logical Tests — vlogical","text":"","code":"vlogical(vector, vpattern, test, simplify_with = NULL, ...)"},{"path":"/reference/vlogical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vectorized Logical Tests — vlogical","text":"vector vector dimensional object processed (e.g., matrix, data.frame, etc.) vpattern vector patterns matched test (function) function use logical testing: function appropriate values vpattern named argument vector, additional argument accept pattern fed atomically, '...' (even used). simplify_with (function) provided, function operates rows, thereby simplifying result ... Additional arguments sent function held argument test","code":""},{"path":"/reference/vlogical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vectorized Logical Tests — vlogical","text":"logical matrix, rows length vector columns length vpattern TRUE items match pattern. vector dimensional, multiple TRUE values may found row.","code":""}]
